{"version":3,"sources":["../../../src/api/manager/manager.routes.js"],"names":["log","require","router","Router","dbmanager","post","req","res","run","body","sql","result","status","json","error","message","get","query"],"mappings":"AAAA;;;;;;AAIA;;;;AACA;;;;;;;;AAHA,IAAMA,MAAMC,QAAQ,OAAR,EAAiB,gBAAjB,CAAZ;;AAKA,IAAMC,SAAS,kBAAQC,MAAR,EAAf;AACA,IAAMC,YAAY,uBAAlB;;AAEA;;;;;;;;;;;;;;;;;;AAkBAF,OAAOG,IAAP,CAAY,MAAZ;AAAA,uDAAoB,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGKH,UAAUI,GAAV,CAAcF,IAAIG,IAAJ,CAASC,GAAvB,CAHL;;AAAA;AAGVC,kBAHU;;;AAKhB;AACAX,kCAAsBW,MAAtB;;AAEA;AACAJ,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEF,cAAF,EAArB;;AATgB;AAAA;;AAAA;AAAA;AAAA;;AAYhB;AACAX;;AAEA;AACAO,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,YAAIC,OAAb,EAArB;;AAhBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;;AAoBA;;;;;;;;;;;;;;;;;;AAkBAb,OAAOc,GAAP,CAAW,MAAX;AAAA,wDAAmB,kBAAOV,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGMH,UAAUI,GAAV,CAAcF,IAAIW,KAAJ,CAAUP,GAAxB,CAHN;;AAAA;AAGTC,kBAHS;;;AAKf;AACAX,iCAAqBW,MAArB;;AAEA;AACAJ,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEF,cAAF,EAArB;;AATe;AAAA;;AAAA;AAAA;AAAA;;AAYf;AACAX;;AAEA;AACAO,gBAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,aAAIC,OAAb,EAArB;;AAhBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;;kBAoBeb,M","file":"manager.routes.js","sourcesContent":["'use strict';\n\nconst log = require('debug')('manager.routes');\n\nimport Manager from './manager';\nimport express from 'express';\n\nconst router = express.Router();\nconst dbmanager = new Manager();\n\n/**\n * @api {post} /api/manager/run Run an sql query\n * @apName PostRun\n * @apiGroup Manager\n *\n * @apiParam (Account) {string}           sql - sql query\n * @apiParamExample {json} Request-Example:\n *     {\n *        \"sql\": \"SELECT * from COURSE\"\n *     }\n *\n * @apiError SyntaxError syntax error\n * @apiErrorExample Error-Response:\n *     HTTP/1.1 301 Syntax Error\n *     {\n *       \"error\": \"Syntax Error near 'SELECT'\"\n *     }\n */\nrouter.post('/run', async (req, res) => {\n  try {\n    // run sql command to the db manager\n    const result = await dbmanager.run(req.body.sql);\n\n    // log result\n    log(`[POST] result `, result);\n\n    // send result\n    res.status(200).json({ result });\n\n  } catch (err) {\n    // log error\n    log(`[POST] run err `, err);\n\n    // send error\n    res.status(200).json({ error: err.message });\n  }\n});\n\n/**\n * @api {get} /api/manager/run Run an sql query\n * @apName PostRun\n * @apiGroup Manager\n *\n * @apiParam (Account) {string}           sql - sql query\n * @apiParamExample {json} Request-Example:\n *     {\n *        \"sql\": \"SELECT * from COURSE\"\n *     }\n *\n * @apiError SyntaxError syntax error\n * @apiErrorExample Error-Response:\n *     HTTP/1.1 301 Syntax Error\n *     {\n *       \"error\": \"Syntax Error near 'SELECT'\"\n *     }\n */\nrouter.get('/run', async (req, res) => {\n  try {\n    // run sql command to the db manager\n    const result = await dbmanager.run(req.query.sql);\n\n    // log result\n    log(`[GET] result `, result);\n\n    // send result\n    res.status(200).json({ result });\n\n  } catch (err) {\n    // log error\n    log(`[GET] run err `, err);\n\n    // send error\n    res.status(200).json({ error: err.message });\n  }\n});\n\nexport default router;\n"]}