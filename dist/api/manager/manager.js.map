{"version":3,"sources":["../../../src/api/manager/manager.js"],"names":["log","require","Manager","props","sql","parsed","parse","type","Table","table","Error","mappedInsert","mapParsed","insert","select"],"mappings":"AAAA;;;;;;;;AAIA;;;;AACA;;;;;;;;;;AAHA,IAAMA,MAAMC,QAAQ,OAAR,EAAiB,SAAjB,CAAZ;;IAIqBC,O;AACnB,mBAAYC,KAAZ,EAAmB;AAAA;AAElB;AADC;;;AAGF;;;;;;;;;;4EAKUC,G;;;;;;;AAERJ;AACAA,6BAAa,SAAb;AACAA,6BAAaI,GAAb;;AAEA;AACMC,sB,GAAS,iBAAOC,KAAP,CAAaF,GAAb,C;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,iCAAiBK,MAAjB;;8BAEOA,OAAOE,I;gDACP,Q,uBAMA,Q;;;;AALGC,qB,GAAQ,kBAAGC,KAAH,CAASJ,OAAOI,KAAhB,C;;oBACTD,K;;;;;sBAAa,IAAIE,KAAJ,sBAA4BL,OAAOI,KAAnC,Q;;;AACZE,4B,GAAeH,MAAMI,SAAN,CAAgBP,MAAhB,C;iDACdG,MAAMK,MAAN,CAAaF,YAAb,C;;;iDAGA,kBAAGG,MAAH,CAAUT,MAAV,C;;;;;;;;;;;;;;;;;;;;;kBAxEMH,O","file":"manager.js","sourcesContent":["'use strict';\n\nconst log = require('debug')('manager');\n\nimport Parser from '../parser';\nimport db from '../default-models/model-db';\nexport default class Manager {\n  constructor(props) {\n    // load databases from file and cache here\n  }\n\n  /**\n   * Run an sql command\n   * @returns {Promise<object>}\n   * @throws {*}\n   */\n  async run(sql) {\n\n    log(`======== RUNNING ========`)\n    log(`DB   `, 'default')\n    log(`Sql  `, sql)\n\n    // generate query tree\n    const parsed = Parser.parse(sql);\n    // const parsed = {\n    //   type: 'insert',\n    //   table: 'COURSE',\n    //   formalValues: [\n    //     'CNo',\n    //     'CTitle',\n    //     'CDesc',\n    //     'NoOfUnits',\n    //     'HasLab',\n    //     'SemOffered'\n    //   ],\n    //   actualValues: [\n    //     'CMSC 191',\n    //     'Special Topics',\n    //     'Big Data Management and Trends',\n    //     '3.0',\n    //     '1',\n    //     '1st'\n    //   ]\n    // }\n\n    // const parsed = {\n    //   type: 'select',\n    //   data: {\n    //     CNo: 'COURSE',\n    //     CTitle: 'COURSE',\n    //     AcadYear: 'COURSEOFFERING'\n    //   },\n    //   columnAlias: {\n    //     CNo: 'a',\n    //     CTitle: 'a',\n    //     AcadYear: 'b'\n    //   },\n    //   tableAlias: {\n    //     a: 'COURSE',\n    //     b: 'COURSEOFFERING'\n    //   },\n    //   conditions: {\n    //     COURSE: {\n    //       CNo: 'CMSC 191'\n    //     }\n    //   }\n    // }\n\n    log(`parsed   `, parsed)\n\n    switch(parsed.type) {\n      case 'insert':\n        const Table = db.table(parsed.table);\n        if (!Table) throw new Error(`Invalid table '${parsed.table}'`)\n        const mappedInsert = Table.mapParsed(parsed);\n        return Table.insert(mappedInsert)\n\n      case 'select':\n        return db.select(parsed)\n    }\n  }\n}\n"]}